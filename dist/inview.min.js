export default class InView{constructor(e){"document"===e||"window"===e?console.error("InView: Invalid selector."):this.items=document.querySelectorAll(e),this.paused=!1,this.delay=0,this.threshold=[];for(let e=0;e<=1;e+=.01)this.threshold.push(e);return this}pause(){return this.paused=!0,this}resume(){return this.paused=!1,this}setDelay(e){return this.delay=e,this}on(e,t){if("enter"===e||"exit"===e)if("IntersectionObserver"in window){var i=new IntersectionObserver(i=>{i.forEach(i=>{if("enter"===e&&i.intersectionRatio>0||"exit"===e&&0===i.intersectionRatio){let s={percentage:100*i.intersectionRatio,rootBounds:i.rootBounds,boundingClientRect:i.boundingClientRect,intersectionRect:i.intersectionRect,target:i.target,time:i.time,event:e};this.paused||(this.delay>0?setTimeout(()=>{t(s)},this.delay):t(s))}})},{threshold:this.threshold});this.items.forEach(e=>{i.observe(e)})}else console.error("InView: IntersectionObserver not supported.");else console.error("InView: Event name "+e+" is invalid.");return this}}